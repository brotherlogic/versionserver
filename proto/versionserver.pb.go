// Code generated by protoc-gen-go. DO NOT EDIT.
// source: versionserver.proto

package versionserver

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Setter               string   `protobuf:"bytes,3,opt,name=setter,proto3" json:"setter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Version) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Version) GetSetter() string {
	if m != nil {
		return m.Setter
	}
	return ""
}

type GetVersionRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{1}
}

func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(m, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

func (m *GetVersionRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetVersionResponse struct {
	Version              *Version `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{2}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type SetVersionRequest struct {
	Set                  *Version `protobuf:"bytes,1,opt,name=set,proto3" json:"set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVersionRequest) Reset()         { *m = SetVersionRequest{} }
func (m *SetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*SetVersionRequest) ProtoMessage()    {}
func (*SetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{3}
}

func (m *SetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVersionRequest.Unmarshal(m, b)
}
func (m *SetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVersionRequest.Marshal(b, m, deterministic)
}
func (m *SetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVersionRequest.Merge(m, src)
}
func (m *SetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_SetVersionRequest.Size(m)
}
func (m *SetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVersionRequest proto.InternalMessageInfo

func (m *SetVersionRequest) GetSet() *Version {
	if m != nil {
		return m.Set
	}
	return nil
}

type SetVersionResponse struct {
	Response             *Version `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVersionResponse) Reset()         { *m = SetVersionResponse{} }
func (m *SetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*SetVersionResponse) ProtoMessage()    {}
func (*SetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{4}
}

func (m *SetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVersionResponse.Unmarshal(m, b)
}
func (m *SetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVersionResponse.Marshal(b, m, deterministic)
}
func (m *SetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVersionResponse.Merge(m, src)
}
func (m *SetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_SetVersionResponse.Size(m)
}
func (m *SetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetVersionResponse proto.InternalMessageInfo

func (m *SetVersionResponse) GetResponse() *Version {
	if m != nil {
		return m.Response
	}
	return nil
}

type SetIfLessThanRequest struct {
	Set                  *Version `protobuf:"bytes,1,opt,name=set,proto3" json:"set,omitempty"`
	TriggerValue         int64    `protobuf:"varint,2,opt,name=trigger_value,json=triggerValue,proto3" json:"trigger_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIfLessThanRequest) Reset()         { *m = SetIfLessThanRequest{} }
func (m *SetIfLessThanRequest) String() string { return proto.CompactTextString(m) }
func (*SetIfLessThanRequest) ProtoMessage()    {}
func (*SetIfLessThanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{5}
}

func (m *SetIfLessThanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIfLessThanRequest.Unmarshal(m, b)
}
func (m *SetIfLessThanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIfLessThanRequest.Marshal(b, m, deterministic)
}
func (m *SetIfLessThanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIfLessThanRequest.Merge(m, src)
}
func (m *SetIfLessThanRequest) XXX_Size() int {
	return xxx_messageInfo_SetIfLessThanRequest.Size(m)
}
func (m *SetIfLessThanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIfLessThanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetIfLessThanRequest proto.InternalMessageInfo

func (m *SetIfLessThanRequest) GetSet() *Version {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *SetIfLessThanRequest) GetTriggerValue() int64 {
	if m != nil {
		return m.TriggerValue
	}
	return 0
}

type SetIfLessThanResponse struct {
	Response             *Version `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIfLessThanResponse) Reset()         { *m = SetIfLessThanResponse{} }
func (m *SetIfLessThanResponse) String() string { return proto.CompactTextString(m) }
func (*SetIfLessThanResponse) ProtoMessage()    {}
func (*SetIfLessThanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a620e0ab7ea44eb0, []int{6}
}

func (m *SetIfLessThanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIfLessThanResponse.Unmarshal(m, b)
}
func (m *SetIfLessThanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIfLessThanResponse.Marshal(b, m, deterministic)
}
func (m *SetIfLessThanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIfLessThanResponse.Merge(m, src)
}
func (m *SetIfLessThanResponse) XXX_Size() int {
	return xxx_messageInfo_SetIfLessThanResponse.Size(m)
}
func (m *SetIfLessThanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIfLessThanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetIfLessThanResponse proto.InternalMessageInfo

func (m *SetIfLessThanResponse) GetResponse() *Version {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SetIfLessThanResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Version)(nil), "versionserver.Version")
	proto.RegisterType((*GetVersionRequest)(nil), "versionserver.GetVersionRequest")
	proto.RegisterType((*GetVersionResponse)(nil), "versionserver.GetVersionResponse")
	proto.RegisterType((*SetVersionRequest)(nil), "versionserver.SetVersionRequest")
	proto.RegisterType((*SetVersionResponse)(nil), "versionserver.SetVersionResponse")
	proto.RegisterType((*SetIfLessThanRequest)(nil), "versionserver.SetIfLessThanRequest")
	proto.RegisterType((*SetIfLessThanResponse)(nil), "versionserver.SetIfLessThanResponse")
}

func init() { proto.RegisterFile("versionserver.proto", fileDescriptor_a620e0ab7ea44eb0) }

var fileDescriptor_a620e0ab7ea44eb0 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x6d, 0x83, 0x6d, 0x1d, 0x0d, 0xd8, 0xb1, 0x96, 0xd0, 0x53, 0xdc, 0x2a, 0xe4, 0x54,
	0x24, 0x9e, 0xbd, 0xaa, 0x05, 0x4f, 0x59, 0xe9, 0x49, 0x90, 0x5a, 0xc6, 0x5a, 0x14, 0x53, 0x77,
	0x36, 0x01, 0x7f, 0x89, 0x7f, 0x57, 0xb2, 0xdd, 0x68, 0xd3, 0xb5, 0x2d, 0x7a, 0xdb, 0x19, 0xde,
	0x7c, 0xef, 0x31, 0xc3, 0xc2, 0x51, 0x4e, 0x8a, 0x67, 0xe9, 0x1b, 0x93, 0xca, 0x49, 0x0d, 0xe6,
	0x2a, 0xd5, 0x29, 0xfa, 0x95, 0xa6, 0x18, 0x42, 0x73, 0xb4, 0x68, 0xe0, 0x21, 0x78, 0x2f, 0xf4,
	0x11, 0xd4, 0xc2, 0x5a, 0xb4, 0x97, 0x14, 0x4f, 0xec, 0xc0, 0x6e, 0x3e, 0x7e, 0xcd, 0x28, 0xa8,
	0x87, 0xb5, 0xc8, 0x4b, 0x16, 0x05, 0x76, 0xa1, 0xc1, 0xa4, 0x35, 0xa9, 0xc0, 0x33, 0x52, 0x5b,
	0x89, 0x33, 0x68, 0x5f, 0x93, 0xb6, 0xb4, 0x84, 0xde, 0x33, 0x62, 0xed, 0x42, 0xc5, 0x15, 0xe0,
	0xb2, 0x8c, 0xe7, 0x45, 0x16, 0x3c, 0x87, 0xa6, 0x0d, 0x66, 0xcc, 0xf6, 0xe3, 0xee, 0xa0, 0x9a,
	0xbe, 0x1c, 0x28, 0x65, 0xe2, 0x12, 0xda, 0xd2, 0xb1, 0x8b, 0xc0, 0x63, 0xd2, 0xc6, 0x6e, 0x3d,
	0xa2, 0x90, 0x88, 0x1b, 0x40, 0xe9, 0xc6, 0x88, 0xa1, 0xa5, 0xec, 0x7b, 0x0b, 0xe4, 0x5b, 0x27,
	0x08, 0x3a, 0x92, 0xf4, 0xf0, 0xe9, 0x96, 0x98, 0xef, 0x9e, 0xc7, 0x7f, 0xcf, 0x82, 0x7d, 0xf0,
	0xb5, 0x9a, 0x4d, 0xa7, 0xa4, 0x1e, 0x96, 0xf7, 0x7d, 0x60, 0x9b, 0xa3, 0xa2, 0x27, 0x08, 0x8e,
	0x57, 0x6c, 0xfe, 0x9f, 0x19, 0x03, 0x68, 0x72, 0x36, 0x99, 0x10, 0xb3, 0xf1, 0x6a, 0x25, 0x65,
	0x19, 0x7f, 0xd6, 0xc1, 0xb7, 0x7a, 0x69, 0xa6, 0x51, 0x02, 0xfc, 0x1c, 0x0c, 0xc3, 0x15, 0xb6,
	0x73, 0xf2, 0xde, 0xc9, 0x06, 0x85, 0x5d, 0xd9, 0x4e, 0x01, 0x95, 0xeb, 0xa1, 0x72, 0x2b, 0x54,
	0xfe, 0x06, 0xbd, 0x07, 0xbf, 0xb2, 0x22, 0xec, 0xbb, 0x53, 0xce, 0x9d, 0x7a, 0xa7, 0x9b, 0x45,
	0x25, 0xfd, 0xb1, 0x61, 0x3e, 0xd0, 0xc5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x98, 0x43,
	0xfd, 0x57, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VersionServerClient is the client API for VersionServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServerClient interface {
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	SetVersion(ctx context.Context, in *SetVersionRequest, opts ...grpc.CallOption) (*SetVersionResponse, error)
	SetIfLessThan(ctx context.Context, in *SetIfLessThanRequest, opts ...grpc.CallOption) (*SetIfLessThanResponse, error)
}

type versionServerClient struct {
	cc *grpc.ClientConn
}

func NewVersionServerClient(cc *grpc.ClientConn) VersionServerClient {
	return &versionServerClient{cc}
}

func (c *versionServerClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/versionserver.VersionServer/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionServerClient) SetVersion(ctx context.Context, in *SetVersionRequest, opts ...grpc.CallOption) (*SetVersionResponse, error) {
	out := new(SetVersionResponse)
	err := c.cc.Invoke(ctx, "/versionserver.VersionServer/SetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionServerClient) SetIfLessThan(ctx context.Context, in *SetIfLessThanRequest, opts ...grpc.CallOption) (*SetIfLessThanResponse, error) {
	out := new(SetIfLessThanResponse)
	err := c.cc.Invoke(ctx, "/versionserver.VersionServer/SetIfLessThan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServerServer is the server API for VersionServer service.
type VersionServerServer interface {
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	SetVersion(context.Context, *SetVersionRequest) (*SetVersionResponse, error)
	SetIfLessThan(context.Context, *SetIfLessThanRequest) (*SetIfLessThanResponse, error)
}

func RegisterVersionServerServer(s *grpc.Server, srv VersionServerServer) {
	s.RegisterService(&_VersionServer_serviceDesc, srv)
}

func _VersionServer_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServerServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/versionserver.VersionServer/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServerServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersionServer_SetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServerServer).SetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/versionserver.VersionServer/SetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServerServer).SetVersion(ctx, req.(*SetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersionServer_SetIfLessThan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIfLessThanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServerServer).SetIfLessThan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/versionserver.VersionServer/SetIfLessThan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServerServer).SetIfLessThan(ctx, req.(*SetIfLessThanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "versionserver.VersionServer",
	HandlerType: (*VersionServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _VersionServer_GetVersion_Handler,
		},
		{
			MethodName: "SetVersion",
			Handler:    _VersionServer_SetVersion_Handler,
		},
		{
			MethodName: "SetIfLessThan",
			Handler:    _VersionServer_SetIfLessThan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "versionserver.proto",
}
